{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflowName": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "storageAccountName": {
            "type": "string"
        },
        "storageAccountKey": {
            "type": "securestring"
        },
        "textAnalyticsKey": {
            "type": "securestring"
        },
        "textAnalyticsUri": {
            "type": "string"
        },
        "textTranslationKey": {
            "type": "securestring"
        },
        "textTranslationUri": {
            "type": "string"
        }
    },
    "variables": {
        "azureblobConnName": "[concat(parameters('workflowName'), 'azureblobconn')]",
        "azureblobConnDisplayName": "[concat(parameters('workflowName'), 'azureblobconn')]",
        "azureblobConnectionApiID": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureblob')]"
    },
    "resources": [{
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azureblobConnName')]",
            "location": "[parameters('location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('azureblobConnDisplayName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('azureblobConnectionApiID')]"
                },
                "parameterValues": {
                    "accessKey": "[parameters('storageAccountKey')]",
                    "accountName": "[parameters('storageAccountName')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflowName')]",
            "location": "[parameters('location')]",             
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azureblobConnName'))]"
            ], 
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "TextAnalyticsKey": {
                            "defaultValue": "[parameters('textAnalyticsKey')]",
                            "type": "securestring"
                        },
                        "TextAnalyticsUri": {
                            "defaultValue": "[parameters('textAnalyticsUri')]",
                            "type": "String"
                        },
                        "TextTranslationKey": {
                            "defaultValue": "[parameters('textTranslationKey')]",
                            "type": "securestring"
                        },
                        "TextTranslationUri": {
                            "defaultValue": "[parameters('textTranslationUri')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "canonicalUri": {
                                            "type": "string"
                                        },
                                        "correlationId": {
                                            "type": "string"
                                        },
                                        "fileName": {
                                            "type": "string"
                                        },
                                        "fileCategory": {
                                            "type": "string"
                                        },
                                        "sasExpiry": {
                                            "type": "string"
                                        },
                                        "sasUri": {
                                            "type": "string"
                                        },
                                        "systemVersion": {
                                            "type": "string"
                                        },
                                        "hash": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "operationOptions": "EnableSchemaValidation",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 50,
                                    "maximumWaitingRuns": 100
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose_result": {
                            "runAfter": {
                                "Get_TextAnalytics_Analyze_job_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "enrichment": {
                                    "values": {
                                        "correlationId": "@triggerBody()?['correlationId']",
                                        "data": "@body('Get_TextAnalytics_Analyze_Result')",
                                        "errors": ""
                                    }
                                }
                            }
                        },
                        "Get_Blob_contents": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@triggerBody()?['sasUri']"
                            }
                        },
                        "Get_TextAnalytics_Analyze_job_results": {
                            "actions": {
                                "Delay": {
                                    "runAfter": {},
                                    "type": "Wait",
                                    "inputs": {
                                        "interval": {
                                            "count": 10,
                                            "unit": "Second"
                                        }
                                    }
                                },
                                "Get_TextAnalytics_Analyze_Result": {
                                    "runAfter": {
                                        "Delay": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Ocp-Apim-Subscription-Key": "@parameters('TextAnalyticsKey')"
                                        },
                                        "method": "GET",
                                        "uri": "@body('Parse_TextAnalytics_Analyze_headers')?['operation-location']"
                                    }
                                },
                                "Parse_TextAnalytics_Analyze_result_body": {
                                    "runAfter": {
                                        "Get_TextAnalytics_Analyze_Result": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_TextAnalytics_Analyze_Result')",
                                        "schema": {
                                            "properties": {
                                                "createdDateTime": {
                                                    "type": "string"
                                                },
                                                "displayName": {
                                                    "type": "string"
                                                },
                                                "errors": {
                                                    "type": "array"
                                                },
                                                "expirationDateTime": {
                                                    "type": "string"
                                                },
                                                "jobId": {
                                                    "type": "string"
                                                },
                                                "lastUpdateDateTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "tasks": {
                                                    "properties": {
                                                        "completed": {
                                                            "type": "integer"
                                                        },
                                                        "details": {
                                                            "properties": {
                                                                "lastUpdateDateTime": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "entityRecognitionPiiTasks": {
                                                            "items": {
                                                                "properties": {
                                                                    "lastUpdateDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "results": {
                                                                        "properties": {
                                                                            "documents": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "entities": {
                                                                                            "type": "array"
                                                                                        },
                                                                                        "id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "redactedText": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "warnings": {
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "redactedText",
                                                                                        "id",
                                                                                        "entities",
                                                                                        "warnings"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "errors": {
                                                                                "type": "array"
                                                                            },
                                                                            "modelVersion": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "state": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastUpdateDateTime",
                                                                    "name",
                                                                    "state",
                                                                    "results"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "entityRecognitionTasks": {
                                                            "items": {
                                                                "properties": {
                                                                    "lastUpdateDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "results": {
                                                                        "properties": {
                                                                            "documents": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "entities": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "category": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "confidenceScore": {
                                                                                                        "type": "number"
                                                                                                    },
                                                                                                    "length": {
                                                                                                        "type": "integer"
                                                                                                    },
                                                                                                    "offset": {
                                                                                                        "type": "integer"
                                                                                                    },
                                                                                                    "subcategory": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "text": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "text",
                                                                                                    "category",
                                                                                                    "offset",
                                                                                                    "length",
                                                                                                    "confidenceScore"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "warnings": {
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "id",
                                                                                        "entities",
                                                                                        "warnings"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "errors": {
                                                                                "type": "array"
                                                                            },
                                                                            "modelVersion": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "state": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastUpdateDateTime",
                                                                    "name",
                                                                    "state",
                                                                    "results"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "failed": {
                                                            "type": "integer"
                                                        },
                                                        "inProgress": {
                                                            "type": "integer"
                                                        },
                                                        "keyPhraseExtractionTasks": {
                                                            "items": {
                                                                "properties": {
                                                                    "lastUpdateDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "results": {
                                                                        "properties": {
                                                                            "documents": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "keyPhrases": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "warnings": {
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "id",
                                                                                        "keyPhrases",
                                                                                        "warnings"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "errors": {
                                                                                "type": "array"
                                                                            },
                                                                            "modelVersion": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "state": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "lastUpdateDateTime",
                                                                    "name",
                                                                    "state",
                                                                    "results"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_TextAnalytics_Analyze_headers": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(body('Parse_TextAnalytics_Analyze_result_body')?['status'], 'succeeded')",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "If_BlobContent_is_empty": {
                            "actions": {
                                "Response_with_empty_EnrichmentData": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "enrichment": {
                                                "values": {
                                                    "correlationId": "@triggerBody()?['correlationId']",
                                                    "data": {},
                                                    "errors": ""
                                                }
                                            }
                                        },
                                        "statusCode": 200
                                    },
                                    "operationOptions": "Asynchronous"
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response_with_empty_EnrichmentData": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_Blob_contents": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Get_Blob_contents')",
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialise_TextAnalytics_Analyze_job": {
                            "runAfter": {
                                "If_BlobContent_is_empty": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "analysisInput": {
                                        "documents": [
                                            {
                                                "id": "@{triggerBody()?['correlationId']}",
                                                "text": "@{body('Get_Blob_contents')}"
                                            }
                                        ]
                                    },
                                    "displayName": "@{triggerBody()?['correlationId']}",
                                    "tasks": {
                                        "entityRecognitionPiiTasks": [
                                            {
                                                "parameters": {
                                                    "domain": "phi",
                                                    "model-version": "latest"
                                                }
                                            }
                                        ],
                                        "entityRecognitionTasks": [
                                            {
                                                "parameters": {
                                                    "model-version": "latest",
                                                    "stringIndexType": "TextElements_v8"
                                                }
                                            }
                                        ],
                                        "keyPhraseExtractionTasks": [
                                            {
                                                "parameters": {
                                                    "model-version": "latest"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "headers": {
                                    "Content-Type": "application/json",
                                    "Ocp-Apim-Subscription-Key": "@parameters('TextAnalyticsKey')"
                                },
                                "method": "POST",
                                "uri": "@{concat(parameters('TextAnalyticsUri'),'/text/analytics/v3.1-preview.3/analyze')}"
                            }
                        },
                        "Parse_TextAnalytics_Analyze_headers": {
                            "runAfter": {
                                "Initialise_TextAnalytics_Analyze_job": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@outputs('Initialise_TextAnalytics_Analyze_job')['headers']",
                                "schema": {
                                    "properties": {
                                        "Content-Length": {
                                            "type": "string"
                                        },
                                        "Date": {
                                            "type": "string"
                                        },
                                        "Strict-Transport-Security": {
                                            "type": "string"
                                        },
                                        "Transfer-Encoding": {
                                            "type": "string"
                                        },
                                        "apim-request-id": {
                                            "type": "string"
                                        },
                                        "operation-location": {
                                            "type": "string"
                                        },
                                        "x-content-type-options": {
                                            "type": "string"
                                        },
                                        "x-envoy-upstream-service-time": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response_with_full_EnrichmentData": {
                            "runAfter": {
                                "Compose_result": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose_result')",
                                "statusCode": 200
                            },
                            "operationOptions": "Asynchronous"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureblobConnName'))]",
                                "connectionName": "azureblob",
                                "id": "[variables('azureblobConnectionApiID')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "logic_app_id": {
            "value": "[resourceId('Microsoft.Logic/workflows',parameters('workflowName'))]",
            "type": "string"
        },
        "logic_app_uri": {
            "value": "[listCallbackUrl(resourceId('Microsoft.Logic/workflows/triggers',parameters('workflowName'),'manual'), '2017-07-01').value]",
            "type": "string"
        }
    }
}