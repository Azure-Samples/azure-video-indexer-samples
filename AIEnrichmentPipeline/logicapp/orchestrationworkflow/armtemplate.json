{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflowName": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "videoworkflowid": {
            "type": "string"
        },
        "imageworkflowid": {
            "type": "string"
        },
        "digitaltextfileworkflowid": {
            "type": "string"
        },
        "sbconnectionstring": {
            "type": "securestring"
        },
        "sbqueuename": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "storageAccountKey": {
            "type": "securestring"
        }
    },
    "variables": {
        "sbConnName": "[concat(parameters('workflowName'), 'sbconn')]",
        "sbConnectionApiID": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/servicebus')]",
        "azureblobConnName": "[concat(parameters('workflowName'), 'azureblobconn')]",
        "azureblobConnDisplayName": "[concat(parameters('workflowName'), 'azureblobconn')]",
        "azureblobConnectionApiID": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureblob')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azureblobConnName')]",
            "location": "[parameters('location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('azureblobConnDisplayName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('azureblobConnectionApiID')]"
                },
                "parameterValues": {
                    "accessKey": "[parameters('storageAccountKey')]",
                    "accountName": "[parameters('storageAccountName')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('sbConnName')]",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "[variables('sbConnName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('sbConnectionApiID')]"
                },
                "parameterValues": {
                    "connectionString": "[parameters('sbconnectionstring')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflowName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('sbConnName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "VideoWorkflowId": {
                            "defaultValue": "[parameters('videoworkflowid')]",
                            "type": "String"
                        },
                        "ImageWorkflowId": {
                            "defaultValue": "[parameters('imageworkflowid')]",
                            "type": "String"
                        },
                        "DigitalTextFileWorkflowId": {
                            "defaultValue": "[parameters('digitaltextfileworkflowid')]",
                            "type": "String"
                        },
                        "sbConnectionString": {
                            "defaultValue": "[parameters('sbconnectionstring')]",
                            "type": "securestring"
                        },
                        "sbQueueName": {
                            "defaultValue": "[parameters('sbqueuename')]",
                            "type": "String"
                        },
                        "ContentType": {
                            "defaultValue": "application/json",
                            "type": "string"
                        },
                        "ExportResult": {
                            "defaultValue": true,
                            "type": "Bool"
                        },
                        "StorageAccountName": {
                            "defaultValue": "[parameters('storageAccountName')]",
                            "type": "String"
                        },
                        "EnrichmentStoreFolderName": {
                            "defaultValue": "enrichment-data",
                            "type": "String"
                        },
                        "DetectDuplicates": {
                            "defaultValue": true,
                            "type": "Bool"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('trigger'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose_result": {
                            "runAfter": {
                                "If_IsDuplicate_is_False_create_enrichments": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "blobinfo": {
                                    "canonicaluri": "@{body('Parse_trigger_payload')?['canonicalUri']}",
                                    "correlationid": "@{body('Parse_trigger_payload')?['correlationId']}",
                                    "fileCategory": "@{body('Parse_trigger_payload')?['fileCategory']}",
                                    "fileName": "@{body('Parse_trigger_payload')?['fileName']}",
                                    "hash": "@{body('Parse_trigger_payload')?['hash']}",
                                    "sasExpiry": "@{body('Parse_trigger_payload')?['sasExpiry']}",
                                    "sasUri": "@{body('Parse_trigger_payload')?['sasUri']}",
                                    "systemVersion": "@{body('Parse_trigger_payload')?['systemVersion']}"
                                },
                                "enrichmentUrl": "https://@{parameters('StorageAccountName')}.dfs.core.windows.net/@{parameters('EnrichmentStoreFolderName')}/@{body('Parse_trigger_payload')?['hash']}.json"
                            },
                            "description": "Composes the result which will go onto the service bus."
                        },
                        "If_DetectDuplicates_is_True": {
                            "actions": {
                                "Attempt_to_get_EnrichmentData_blob": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/GetFileContentByPath",
                                        "queries": {
                                            "inferContentType": true,
                                            "path": "@{parameters('EnrichmentStoreFolderName')}/@{body('Parse_trigger_payload')?['hash']}.json",
                                            "queryParametersSingleEncoded": true
                                        }
                                    }
                                },
                                "Set_IsDuplicate_to_False": {
                                    "runAfter": {
                                        "Attempt_to_get_EnrichmentData_blob": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "IsDuplicate",
                                        "value": false
                                    }
                                },
                                "Set_IsDuplicate_to_True": {
                                    "runAfter": {
                                        "Attempt_to_get_EnrichmentData_blob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "IsDuplicate",
                                        "value": true
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_EnrichmentData": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_IsDuplicate_False": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "IsDuplicate",
                                            "value": false
                                        },
                                        "description": "File is assumed to not be a duplicate and is tagged false. Workflow proceeds treating the file ready for enrichment."
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@parameters('DetectDuplicates')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "Setting the 'DetectDuplicate' condition. By default it is set to true, once set to false, it will bypass the duplicate detection function. When an item is set to false, it is assumed to be a new file and duplicate detection is not required."
                        },
                        "If_ExportResult_is_True_send_message": {
                            "actions": {
                                "Send_message": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "ContentData": "@{base64(outputs('Compose_result'))}",
                                            "ContentType": "application/json",
                                            "CorrelationId": "@body('Parse_trigger_payload')?['correlationId']",
                                            "Label": "ImportMessage:v1.0",
                                            "SessionId": "@body('Parse_trigger_payload')?['correlationId']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['servicebus']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/@{encodeURIComponent(encodeURIComponent('exporter'))}/messages",
                                        "queries": {
                                            "systemProperties": "Run Details"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Compose_result": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Terminate_with_Succeeded": {
                                        "runAfter": {},
                                        "type": "Terminate",
                                        "inputs": {
                                            "runStatus": "Succeeded"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@parameters('ExportResult')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "If_IsDuplicate_is_False_create_enrichments": {
                            "actions": {
                                "Create_file_category_specific_enrichment_data": {
                                    "runAfter": {},
                                    "cases": {
                                        "Case_DigitalText": {
                                            "case": "digitaltext",
                                            "actions": {
                                                "Set_EnrichmentData_with_DigitalText_information": {
                                                    "runAfter": {
                                                        "digitaltextfileworkflow": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "EnrichmentData",
                                                        "value": "@{body('digitaltextfileworkflow')}"
                                                    }
                                                },
                                                "digitaltextfileworkflow": {
                                                    "runAfter": {},
                                                    "type": "Workflow",
                                                    "inputs": {
                                                        "body": {
                                                            "canonicalUri": "@body('Parse_trigger_payload')?['canonicalUri']",
                                                            "correlationId": "@body('Parse_trigger_payload')?['correlationId']",
                                                            "fileCategory": "@body('Parse_trigger_payload')?['fileCategory']",
                                                            "fileName": "@body('Parse_trigger_payload')?['fileName']",
                                                            "hash": "@{body('Parse_trigger_payload')?['hash']}",
                                                            "sasExpiry": "@body('Parse_trigger_payload')?['sasExpiry']",
                                                            "sasUri": "@body('Parse_trigger_payload')?['sasUri']",
                                                            "systemVersion": "@body('Parse_trigger_payload')?['systemVersion']"
                                                        },
                                                        "host": {
                                                            "triggerName": "manual",
                                                            "workflow": {
                                                                "id": "[parameters('digitaltextfileworkflowid')]"
                                                            }
                                                        },
                                                        "retryPolicy": {
                                                            "type": "none"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "Case_Image": {
                                            "case": "image",
                                            "actions": {
                                                "Set_EnrichmentData_with_Image_information": {
                                                    "runAfter": {
                                                        "imageworkflow": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "EnrichmentData",
                                                        "value": "@{body('imageworkflow')}"
                                                    }
                                                },
                                                "imageworkflow": {
                                                    "runAfter": {},
                                                    "type": "Workflow",
                                                    "inputs": {
                                                        "body": {
                                                            "canonicalUri": "@body('Parse_trigger_payload')?['canonicalUri']",
                                                            "correlationId": "@body('Parse_trigger_payload')?['correlationId']",
                                                            "fileCategory": "@body('Parse_trigger_payload')?['fileCategory']",
                                                            "fileName": "@body('Parse_trigger_payload')?['fileName']",
                                                            "hash": "@{body('Parse_trigger_payload')?['hash']}",
                                                            "sasExpiry": "@body('Parse_trigger_payload')?['sasExpiry']",
                                                            "sasUri": "@body('Parse_trigger_payload')?['sasUri']",
                                                            "systemVersion": "@body('Parse_trigger_payload')?['systemVersion']"
                                                        },
                                                        "host": {
                                                            "triggerName": "manual",
                                                            "workflow": {
                                                                "id": "[parameters('imageworkflowid')]"
                                                            }
                                                        },
                                                        "retryPolicy": {
                                                            "type": "none"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "Case_Video": {
                                            "case": "video",
                                            "actions": {
                                                "Set_EnrichmentData_with_Video_information": {
                                                    "runAfter": {
                                                        "videoworkflow": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "EnrichmentData",
                                                        "value": "@{body('videoworkflow')}"
                                                    }
                                                },
                                                "videoworkflow": {
                                                    "runAfter": {},
                                                    "type": "Workflow",
                                                    "inputs": {
                                                        "body": {
                                                            "canonicalUri": "@body('Parse_trigger_payload')?['canonicalUri']",
                                                            "correlationId": "@body('Parse_trigger_payload')?['correlationId']",
                                                            "fileCategory": "@body('Parse_trigger_payload')?['fileCategory']",
                                                            "fileName": "@body('Parse_trigger_payload')?['fileName']",
                                                            "hash": "@{body('Parse_trigger_payload')?['hash']}",
                                                            "sasExpiry": "@body('Parse_trigger_payload')?['sasExpiry']",
                                                            "sasUri": "@body('Parse_trigger_payload')?['sasUri']",
                                                            "systemVersion": "@body('Parse_trigger_payload')?['systemVersion']"
                                                        },
                                                        "host": {
                                                            "triggerName": "manual",
                                                            "workflow": {
                                                                "id": "[parameters('videoworkflowid')]"
                                                            }
                                                        },
                                                        "retryPolicy": {
                                                            "type": "none"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_trigger_payload')?['fileCategory']",
                                    "type": "Switch"
                                },
                                "SaveEnrichedDataToBlob": {
                                    "runAfter": {
                                        "Create_file_category_specific_enrichment_data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@variables('EnrichmentData')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "@parameters('EnrichmentStoreFolderName')",
                                            "name": "@{body('Parse_trigger_payload')?['hash']}.json",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "If_DetectDuplicates_is_True": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('IsDuplicate')",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "If it is a duplicate, copy EnrichmentData from the FileRecord it is a duplicate of. If not, or forceEnrichment has been set, create fresh EnrichmentData."
                        },
                        "Initialize_EnrichmentData": {
                            "runAfter": {
                                "Initialize_IsDuplicate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EnrichmentData",
                                        "type": "string"
                                    }
                                ]
                            },
                            "description": "Setting the EnrichmentData variable"
                        },
                        "Initialize_IsDuplicate": {
                            "runAfter": {
                                "Parse_trigger_payload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IsDuplicate",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            },
                            "description": "Declaring the IsDuplicate variable as an output from the JSON payload above to be fed into the condition below."
                        },
                        "Parse_trigger_payload": {
                            "runAfter": {},
                            "trackedProperties": {
                                "correlationId": "@action()['outputs']['body']?['correlationId']",
                                "fileName": "@action()['outputs']['body']?['fileName']",
                                "systemVersion": "@action()['outputs']['body']?['systemVersion']"
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(triggerBody()?['ContentData'])",
                                "schema": {
                                    "properties": {
                                        "canonicalUri": {
                                            "type": "string"
                                        },
                                        "correlationId": {
                                            "type": "string"
                                        },
                                        "fileCategory": {
                                            "type": "string"
                                        },
                                        "fileName": {
                                            "type": "string"
                                        },
                                        "hash": {
                                            "type": "string"
                                        },
                                        "sasExpiry": {
                                            "type": "string"
                                        },
                                        "sasUri": {
                                            "type": "string"
                                        },
                                        "systemVersion": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "description": "Parses the incoming enrichment data to JSON to be used throughout the workflow."
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('sbConnName'))]",
                                "connectionName": "servicebus",
                                "id": "[variables('sbConnectionApiID')]"
                            },
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureblobConnName'))]",
                                "connectionName": "azureblob",
                                "id": "[variables('azureblobConnectionApiID')]"
                            }
                        }
                    }
                },
                "runtimeConfiguration": {
                    "operationOptions": "OptimizedForHighThroughput"
                }
            }
        }
    ],
    "outputs": {
        "logic_app_id": {
            "value": "[resourceId('Microsoft.Logic/workflows',parameters('workflowName'))]",
            "type": "string"
        }
    }
}